# -*- coding: utf-8 -*-
"""latihan

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ROivUBn-YzmcDuCmEHn15L0_s0WzNkXU
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import openai
from datetime import datetime

# 1. Load Dataset
st.title("📊 Media Intelligence Dashboard - FrostiQ")
df = pd.read_csv('FrostiQ.csv')
df['Date'] = pd.to_datetime(df['Date'])

# 2. Setup OpenAI Client via OpenRouter
api_key = st.secrets["api_keys"]["openrouter"]
client = openai.OpenAI(
    api_key=api_key,
    base_url="https://openrouter.ai/api/v1",
)

# 3. Helper Function for AI Insight
def get_insights(chart_title, df_context, question, model="mistralai/mistral-7b-instruct-v0.2"):
    context = df_context.to_csv(index=False)
    prompt = f"""
Anda adalah analis intelijen media profesional. Analisis dataset berikut untuk: {chart_title}.
DATA:
{context}
PERTANYAAN: {question}
Berikan 3 insight yang ringkas, berbobot, dan dapat ditindaklanjuti, semuanya dalam **bahasa Indonesia**.
"""

    response = client.chat.completions.create(
        model=model,
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
    )
    return response.choices[0].message.content

# 4. Visualisasi dan AI Insight

## 4.1 Sentiment Breakdown
st.header("📌 Sentiment Breakdown")
sentiment_data = df['Sentiment'].value_counts().reset_index()
sentiment_data.columns = ['Sentiment', 'Count']

fig1, ax1 = plt.subplots()
sns.barplot(data=sentiment_data, x='Sentiment', y='Count', palette='coolwarm', ax=ax1)
ax1.set_title("Sentiment Breakdown")
st.pyplot(fig1)

st.subheader("🔍 AI Insights")
st.write(get_insights(
    "Sentiment Breakdown",
    sentiment_data,
    "Apa insight paling menonjol dari distribusi sentimen terhadap FrostiQ dan bagaimana hal ini dapat memengaruhi strategi media mereka?"
))

## 4.2 Engagement Trend
st.header("📈 Engagement Trend Over Time")
engagement_trend = df.groupby('Date')['Engagements'].sum().reset_index()
fig2 = px.line(engagement_trend, x='Date', y='Engagements', title="Engagement Trend Over Time")
st.plotly_chart(fig2)

st.subheader("🔍 AI Insights")
st.write(get_insights(
    "Engagement Trend Over Time",
    engagement_trend,
    "Apa pola dan lonjakan keterlibatan audiens terhadap FrostiQ dari waktu ke waktu?"
))

## 4.3 Platform Engagement
st.header("🧭 Platform Engagement")
platform_data = df.groupby('Platform')['Engagements'].sum().sort_values(ascending=False).reset_index()

fig3, ax3 = plt.subplots()
sns.barplot(data=platform_data, x='Engagements', y='Platform', palette='viridis', ax=ax3)
ax3.set_title("Platform Engagements")
st.pyplot(fig3)

st.subheader("🔍 AI Insights")
st.write(get_insights(
    "Platform Engagements",
    platform_data,
    "Platform mana yang menunjukkan performa terbaik dalam kampanye FrostiQ dan apa yang dapat disimpulkan dari hal ini?"
))

## 4.4 Media Type Mix
st.header("🧪 Media Type Mix")
media_mix = df['Media_Type'].value_counts().reset_index()
media_mix.columns = ['Media_Type', 'Count']
fig4 = px.pie(media_mix, values='Count', names='Media_Type', title='Media Type Mix')
st.plotly_chart(fig4)

st.subheader("🔍 AI Insights")
st.write(get_insights(
    "Media Type Mix",
    media_mix,
    "Apa format media paling disukai dan bagaimana rekomendasi strategi konten untuk FrostiQ?"
))

## 4.5 Top Locations
st.header("🌍 Top 5 Locations by Engagement")
location_data = df.groupby('Location')['Engagements'].sum().sort_values(ascending=False).head(5).reset_index()

fig5, ax5 = plt.subplots()
sns.barplot(data=location_data, x='Engagements', y='Location', palette='Set2', ax=ax5)
ax5.set_title("Top 5 Locations by Engagement")
st.pyplot(fig5)

st.subheader("🔍 AI Insights")
st.write(get_insights(
    "Top 5 Locations by Engagement",
    location_data,
    "Lokasi mana yang paling efektif untuk target audiens FrostiQ dan apa yang menyebabkannya?"
))